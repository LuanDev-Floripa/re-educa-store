#!/bin/bash

# üåê SCRIPT DE CONFIGURA√á√ÉO DNS PARA API
# Data: 26 de Janeiro de 2025
# Vers√£o: 1.0

echo "üåê CONFIGURANDO DNS PARA API RE-EDUCA..."
echo "=========================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERRO]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[AVISO]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# Obter IP p√∫blico
log "üìç Obtendo IP p√∫blico..."
PUBLIC_IP=$(curl -s ifconfig.me)
log "IP P√∫blico: $PUBLIC_IP"

# Verificar se nginx est√° rodando
log "üîç Verificando nginx..."
if curl -s http://localhost:8080/health > /dev/null; then
    log "‚úÖ Nginx funcionando em localhost:8080"
else
    error "‚ùå Nginx n√£o est√° funcionando"
    exit 1
fi

# Verificar se backend est√° rodando
log "üîç Verificando backend..."
if curl -s http://localhost:9001/health > /dev/null; then
    log "‚úÖ Backend funcionando em localhost:9001"
else
    error "‚ùå Backend n√£o est√° funcionando"
    exit 1
fi

# Testar conectividade externa
log "üåç Testando conectividade externa..."
if curl -s http://$PUBLIC_IP:8080/health --connect-timeout 10 > /dev/null; then
    log "‚úÖ Nginx acess√≠vel externamente em $PUBLIC_IP:8080"
    EXTERNAL_ACCESS=true
else
    warning "‚ö†Ô∏è Nginx n√£o acess√≠vel externamente - pode ser firewall"
    EXTERNAL_ACCESS=false
fi

echo ""
echo "=========================================="
echo "üìã CONFIGURA√á√ÉO DNS NECESS√ÅRIA"
echo "=========================================="
echo ""
echo "Para configurar a API externamente, voc√™ precisa:"
echo ""
echo "1. üåê Acessar o painel do Cloudflare:"
echo "   https://dash.cloudflare.com/"
echo ""
echo "2. üîß Configurar DNS Record:"
echo "   ‚Ä¢ Tipo: A"
echo "   ‚Ä¢ Nome: api"
echo "   ‚Ä¢ Conte√∫do: $PUBLIC_IP"
echo "   ‚Ä¢ TTL: 1 (Auto)"
echo "   ‚Ä¢ Proxy: ‚ùå Desabilitado (se nginx n√£o acess√≠vel externamente)"
echo ""
echo "3. üîß Se nginx for acess√≠vel externamente:"
echo "   ‚Ä¢ Proxy: ‚úÖ Habilitado"
echo "   ‚Ä¢ Porta: 8080"
echo ""

if [ "$EXTERNAL_ACCESS" = true ]; then
    echo "‚úÖ CONFIGURA√á√ÉO RECOMENDADA:"
    echo "   ‚Ä¢ Use o IP: $PUBLIC_IP"
    echo "   ‚Ä¢ Configure como A record"
    echo "   ‚Ä¢ Habilite proxy do Cloudflare"
    echo "   ‚Ä¢ A API estar√° dispon√≠vel em: https://api.topsupplementslab.com"
else
    echo "‚ö†Ô∏è CONFIGURA√á√ÉO ALTERNATIVA:"
    echo "   ‚Ä¢ Use o IP: $PUBLIC_IP"
    echo "   ‚Ä¢ Configure como A record"
    echo "   ‚Ä¢ Desabilite proxy do Cloudflare"
    echo "   ‚Ä¢ A API estar√° dispon√≠vel em: http://api.topsupplementslab.com:8080"
fi

echo ""
echo "4. üß™ Testar ap√≥s configura√ß√£o:"
echo "   curl https://api.topsupplementslab.com/health"
echo "   # ou"
echo "   curl http://api.topsupplementslab.com:8080/health"
echo ""

# Criar script de teste
log "üìù Criando script de teste..."
cat > /root/Projetos/re-educa/scripts/testar_api_externa.sh << 'TEST_EOF'
#!/bin/bash
echo "üß™ TESTANDO API EXTERNA..."
echo "=========================="

echo "1. Testando API via HTTPS (com proxy):"
curl -I https://api.topsupplementslab.com/health 2>/dev/null || echo "‚ùå HTTPS n√£o funciona"

echo ""
echo "2. Testando API via HTTP (sem proxy):"
curl -I http://api.topsupplementslab.com:8080/health 2>/dev/null || echo "‚ùå HTTP n√£o funciona"

echo ""
echo "3. Testando API local:"
curl -s http://localhost:9001/health | jq . 2>/dev/null || echo "‚ùå Local n√£o funciona"

echo ""
echo "4. Testando nginx local:"
curl -s http://localhost:8080/health | jq . 2>/dev/null || echo "‚ùå Nginx n√£o funciona"
TEST_EOF

chmod +x /root/Projetos/re-educa/scripts/testar_api_externa.sh

log "‚úÖ Script de teste criado: ./scripts/testar_api_externa.sh"

echo ""
echo "=========================================="
echo "üéØ PR√ìXIMOS PASSOS:"
echo "=========================================="
echo ""
echo "1. Configure o DNS no Cloudflare conforme instru√ß√µes acima"
echo "2. Execute: ./scripts/testar_api_externa.sh"
echo "3. Se funcionar, a API estar√° dispon√≠vel externamente!"
echo ""
echo "üìû Suporte: Verifique os logs em /var/log/re-educa-backend.log"
echo "=========================================="
